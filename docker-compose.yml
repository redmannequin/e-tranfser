version: "3.8"

services:

  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5

    volumes:
      - e_transfer_postgres_data:/var/lib/postgresql/data
    networks:
      - e_transfer_dev

  gateway:
    hostname: gateway
    container_name: gateway
    build:
      context: .
      dockerfile: Dockerfile
      target: gateway
    depends_on:
      - postgres
    ports:
      - "3000:3000"
    environment:
      APP_HTTP_PORT: 3000

      APP_DB_CONFIG__NAME: ${DB_NAME}
      APP_DB_CONFIG__HOST: postgres
      APP_DB_CONFIG__PORT: 5432
      APP_DB_CONFIG__USERNAME: ${DB_USERNAME}
      APP_DB_CONFIG__PASSWORD: ${DB_PASSWORD}

      APP_TL_CONFIG__CLIENT_ID: ${TL_CLIENT_ID}
      APP_TL_CONFIG__CLIENT_SECRET: ${TL_CLIENT_SECRET}
      APP_TL_CONFIG__MERCHANT_ACCOUNT_ID: ${TL_MERCHANT_ACCOUNT_ID}
      APP_TL_CONFIG__KID: ${TL_KID}
      APP_TL_CONFIG__PRIVATE_KEY: ${TL_PRIVATE_KEY}
      APP_TL_CONFIG__REDIRECT_URI: ${TL_REDIRECT_URI}
      APP_TL_CONFIG__DATA_REDIRECT_URI: ${TL_DATA_REDIRECT_URI}
      APP_TL_CONFIG__ENVIORNMENT: ${TL_ENVIORNMENT}

    networks:
      - e_transfer_dev

volumes:
  e_transfer_postgres_data:


networks:
  e_transfer_dev:
    external: true
